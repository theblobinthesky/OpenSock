// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: opensock/dc/v1/dc.proto

package dcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionRequest_Mode int32

const (
	CreateSessionRequest_MODE_UNSPECIFIED CreateSessionRequest_Mode = 0
	CreateSessionRequest_MIXED_UNIQUES    CreateSessionRequest_Mode = 1
	CreateSessionRequest_SAME_TYPE        CreateSessionRequest_Mode = 2
)

// Enum value maps for CreateSessionRequest_Mode.
var (
	CreateSessionRequest_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MIXED_UNIQUES",
		2: "SAME_TYPE",
	}
	CreateSessionRequest_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MIXED_UNIQUES":    1,
		"SAME_TYPE":        2,
	}
)

func (x CreateSessionRequest_Mode) Enum() *CreateSessionRequest_Mode {
	p := new(CreateSessionRequest_Mode)
	*p = x
	return p
}

func (x CreateSessionRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateSessionRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_opensock_dc_v1_dc_proto_enumTypes[0].Descriptor()
}

func (CreateSessionRequest_Mode) Type() protoreflect.EnumType {
	return &file_opensock_dc_v1_dc_proto_enumTypes[0]
}

func (x CreateSessionRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateSessionRequest_Mode.Descriptor instead.
func (CreateSessionRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{0, 0}
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Name          string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Handle        string                    `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Email         string                    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	NotifyOptIn   bool                      `protobuf:"varint,4,opt,name=notify_opt_in,json=notifyOptIn,proto3" json:"notify_opt_in,omitempty"`
	Language      string                    `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Mode          CreateSessionRequest_Mode `protobuf:"varint,6,opt,name=mode,proto3,enum=opensock.dc.v1.CreateSessionRequest_Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSessionRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *CreateSessionRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateSessionRequest) GetNotifyOptIn() bool {
	if x != nil {
		return x.NotifyOptIn
	}
	return false
}

func (x *CreateSessionRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateSessionRequest) GetMode() CreateSessionRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return CreateSessionRequest_MODE_UNSPECIFIED
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type FinalizeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeSessionRequest) Reset() {
	*x = FinalizeSessionRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeSessionRequest) ProtoMessage() {}

func (x *FinalizeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeSessionRequest.ProtoReflect.Descriptor instead.
func (*FinalizeSessionRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{2}
}

func (x *FinalizeSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type FinalizeSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeSessionResponse) Reset() {
	*x = FinalizeSessionResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeSessionResponse) ProtoMessage() {}

func (x *FinalizeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeSessionResponse.ProtoReflect.Descriptor instead.
func (*FinalizeSessionResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{3}
}

func (x *FinalizeSessionResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// Admin RPCs
type ListSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode          string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{4}
}

func (x *ListSessionsRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListSessionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSessionsRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ListSessionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SessionSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Handle        string                 `protobuf:"bytes,4,opt,name=handle,proto3" json:"handle,omitempty"`
	Mode          string                 `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
	ImageCount    int32                  `protobuf:"varint,6,opt,name=image_count,json=imageCount,proto3" json:"image_count,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FinalizedAt   string                 `protobuf:"bytes,8,opt,name=finalized_at,json=finalizedAt,proto3" json:"finalized_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionSummary) Reset() {
	*x = SessionSummary{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSummary) ProtoMessage() {}

func (x *SessionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSummary.ProtoReflect.Descriptor instead.
func (*SessionSummary) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{5}
}

func (x *SessionSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SessionSummary) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SessionSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SessionSummary) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *SessionSummary) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *SessionSummary) GetImageCount() int32 {
	if x != nil {
		return x.ImageCount
	}
	return 0
}

func (x *SessionSummary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SessionSummary) GetFinalizedAt() string {
	if x != nil {
		return x.FinalizedAt
	}
	return ""
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*SessionSummary      `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{6}
}

func (x *ListSessionsResponse) GetSessions() []*SessionSummary {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// Upload RPCs
type InitUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	TotalSize     uint64                 `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FileChecksum  []byte                 `protobuf:"bytes,5,opt,name=file_checksum,json=fileChecksum,proto3" json:"file_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadRequest) Reset() {
	*x = InitUploadRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadRequest) ProtoMessage() {}

func (x *InitUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadRequest.ProtoReflect.Descriptor instead.
func (*InitUploadRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{10}
}

func (x *InitUploadRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *InitUploadRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *InitUploadRequest) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *InitUploadRequest) GetFileChecksum() []byte {
	if x != nil {
		return x.FileChecksum
	}
	return nil
}

type InitUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadResponse) Reset() {
	*x = InitUploadResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadResponse) ProtoMessage() {}

func (x *InitUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadResponse.ProtoReflect.Descriptor instead.
func (*InitUploadResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{11}
}

func (x *InitUploadResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,3,opt,name=chunk,proto3" json:"chunk,omitempty"`
	ChunkChecksum []byte                 `protobuf:"bytes,4,opt,name=chunk_checksum,json=chunkChecksum,proto3" json:"chunk_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadChunkRequest) Reset() {
	*x = UploadChunkRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkRequest) ProtoMessage() {}

func (x *UploadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadChunkRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{12}
}

func (x *UploadChunkRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadChunkRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UploadChunkRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadChunkRequest) GetChunkChecksum() []byte {
	if x != nil {
		return x.ChunkChecksum
	}
	return nil
}

type UploadChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadChunkResponse) Reset() {
	*x = UploadChunkResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkResponse) ProtoMessage() {}

func (x *UploadChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkResponse.ProtoReflect.Descriptor instead.
func (*UploadChunkResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{13}
}

func (x *UploadChunkResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CompleteUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	FileChecksum  []byte                 `protobuf:"bytes,2,opt,name=file_checksum,json=fileChecksum,proto3" json:"file_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadRequest) Reset() {
	*x = CompleteUploadRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadRequest) ProtoMessage() {}

func (x *CompleteUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteUploadRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{14}
}

func (x *CompleteUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteUploadRequest) GetFileChecksum() []byte {
	if x != nil {
		return x.FileChecksum
	}
	return nil
}

type CompleteUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadResponse) Reset() {
	*x = CompleteUploadResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadResponse) ProtoMessage() {}

func (x *CompleteUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteUploadResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{15}
}

func (x *CompleteUploadResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CompleteUploadResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Config RPC
type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{16}
}

type GetConfigResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SessionImageCap uint32                 `protobuf:"varint,1,opt,name=session_image_cap,json=sessionImageCap,proto3" json:"session_image_cap,omitempty"`
	MinRequired     map[string]uint32      `protobuf:"bytes,2,rep,name=min_required,json=minRequired,proto3" json:"min_required,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	FileSizeLimitMb uint32                 `protobuf:"varint,3,opt,name=file_size_limit_mb,json=fileSizeLimitMb,proto3" json:"file_size_limit_mb,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{17}
}

func (x *GetConfigResponse) GetSessionImageCap() uint32 {
	if x != nil {
		return x.SessionImageCap
	}
	return 0
}

func (x *GetConfigResponse) GetMinRequired() map[string]uint32 {
	if x != nil {
		return x.MinRequired
	}
	return nil
}

func (x *GetConfigResponse) GetFileSizeLimitMb() uint32 {
	if x != nil {
		return x.FileSizeLimitMb
	}
	return 0
}

type GetAdminConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdminConfigRequest) Reset() {
	*x = GetAdminConfigRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminConfigRequest) ProtoMessage() {}

func (x *GetAdminConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminConfigRequest.ProtoReflect.Descriptor instead.
func (*GetAdminConfigRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{18}
}

type GetAdminConfigResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionImageCap  uint32                 `protobuf:"varint,1,opt,name=session_image_cap,json=sessionImageCap,proto3" json:"session_image_cap,omitempty"`
	MinRequiredMixed uint32                 `protobuf:"varint,2,opt,name=min_required_mixed,json=minRequiredMixed,proto3" json:"min_required_mixed,omitempty"`
	MinRequiredSame  uint32                 `protobuf:"varint,3,opt,name=min_required_same,json=minRequiredSame,proto3" json:"min_required_same,omitempty"`
	FileSizeLimitMb  uint32                 `protobuf:"varint,4,opt,name=file_size_limit_mb,json=fileSizeLimitMb,proto3" json:"file_size_limit_mb,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetAdminConfigResponse) Reset() {
	*x = GetAdminConfigResponse{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminConfigResponse) ProtoMessage() {}

func (x *GetAdminConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminConfigResponse.ProtoReflect.Descriptor instead.
func (*GetAdminConfigResponse) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{19}
}

func (x *GetAdminConfigResponse) GetSessionImageCap() uint32 {
	if x != nil {
		return x.SessionImageCap
	}
	return 0
}

func (x *GetAdminConfigResponse) GetMinRequiredMixed() uint32 {
	if x != nil {
		return x.MinRequiredMixed
	}
	return 0
}

func (x *GetAdminConfigResponse) GetMinRequiredSame() uint32 {
	if x != nil {
		return x.MinRequiredSame
	}
	return 0
}

func (x *GetAdminConfigResponse) GetFileSizeLimitMb() uint32 {
	if x != nil {
		return x.FileSizeLimitMb
	}
	return 0
}

type UpdateAdminConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionImageCap  uint32                 `protobuf:"varint,1,opt,name=session_image_cap,json=sessionImageCap,proto3" json:"session_image_cap,omitempty"`
	MinRequiredMixed uint32                 `protobuf:"varint,2,opt,name=min_required_mixed,json=minRequiredMixed,proto3" json:"min_required_mixed,omitempty"`
	MinRequiredSame  uint32                 `protobuf:"varint,3,opt,name=min_required_same,json=minRequiredSame,proto3" json:"min_required_same,omitempty"`
	FileSizeLimitMb  uint32                 `protobuf:"varint,4,opt,name=file_size_limit_mb,json=fileSizeLimitMb,proto3" json:"file_size_limit_mb,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateAdminConfigRequest) Reset() {
	*x = UpdateAdminConfigRequest{}
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdminConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminConfigRequest) ProtoMessage() {}

func (x *UpdateAdminConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensock_dc_v1_dc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdminConfigRequest) Descriptor() ([]byte, []int) {
	return file_opensock_dc_v1_dc_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAdminConfigRequest) GetSessionImageCap() uint32 {
	if x != nil {
		return x.SessionImageCap
	}
	return 0
}

func (x *UpdateAdminConfigRequest) GetMinRequiredMixed() uint32 {
	if x != nil {
		return x.MinRequiredMixed
	}
	return 0
}

func (x *UpdateAdminConfigRequest) GetMinRequiredSame() uint32 {
	if x != nil {
		return x.MinRequiredSame
	}
	return 0
}

func (x *UpdateAdminConfigRequest) GetFileSizeLimitMb() uint32 {
	if x != nil {
		return x.FileSizeLimitMb
	}
	return 0
}

var File_opensock_dc_v1_dc_proto protoreflect.FileDescriptor

const file_opensock_dc_v1_dc_proto_rawDesc = "" +
	"\n" +
	"\x17opensock/dc/v1/dc.proto\x12\x0eopensock.dc.v1\"\x97\x02\n" +
	"\x14CreateSessionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06handle\x18\x02 \x01(\tR\x06handle\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\"\n" +
	"\rnotify_opt_in\x18\x04 \x01(\bR\vnotifyOptIn\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12=\n" +
	"\x04mode\x18\x06 \x01(\x0e2).opensock.dc.v1.CreateSessionRequest.ModeR\x04mode\">\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rMIXED_UNIQUES\x10\x01\x12\r\n" +
	"\tSAME_TYPE\x10\x02\"6\n" +
	"\x15CreateSessionResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"7\n" +
	"\x16FinalizeSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\")\n" +
	"\x17FinalizeSessionResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"k\n" +
	"\x13ListSessionsRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\tR\x04mode\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xd9\x01\n" +
	"\x0eSessionSummary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06handle\x18\x04 \x01(\tR\x06handle\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\tR\x04mode\x12\x1f\n" +
	"\vimage_count\x18\x06 \x01(\x05R\n" +
	"imageCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12!\n" +
	"\ffinalized_at\x18\b \x01(\tR\vfinalizedAt\"R\n" +
	"\x14ListSessionsResponse\x12:\n" +
	"\bsessions\x18\x01 \x03(\v2\x1e.opensock.dc.v1.SessionSummaryR\bsessions\"5\n" +
	"\x14DeleteSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\")\n" +
	"\x11DeleteUserRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\" \n" +
	"\x0eDeleteResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xaf\x01\n" +
	"\x11InitUploadRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x04R\ttotalSize\x12#\n" +
	"\rfile_checksum\x18\x05 \x01(\fR\ffileChecksum\"1\n" +
	"\x12InitUploadResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\"\x84\x01\n" +
	"\x12UploadChunkRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x14\n" +
	"\x05chunk\x18\x03 \x01(\fR\x05chunk\x12%\n" +
	"\x0echunk_checksum\x18\x04 \x01(\fR\rchunkChecksum\"%\n" +
	"\x13UploadChunkResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"Y\n" +
	"\x15CompleteUploadRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12#\n" +
	"\rfile_checksum\x18\x02 \x01(\fR\ffileChecksum\"G\n" +
	"\x16CompleteUploadResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"\x12\n" +
	"\x10GetConfigRequest\"\x83\x02\n" +
	"\x11GetConfigResponse\x12*\n" +
	"\x11session_image_cap\x18\x01 \x01(\rR\x0fsessionImageCap\x12U\n" +
	"\fmin_required\x18\x02 \x03(\v22.opensock.dc.v1.GetConfigResponse.MinRequiredEntryR\vminRequired\x12+\n" +
	"\x12file_size_limit_mb\x18\x03 \x01(\rR\x0ffileSizeLimitMb\x1a>\n" +
	"\x10MinRequiredEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\"\x17\n" +
	"\x15GetAdminConfigRequest\"\xcb\x01\n" +
	"\x16GetAdminConfigResponse\x12*\n" +
	"\x11session_image_cap\x18\x01 \x01(\rR\x0fsessionImageCap\x12,\n" +
	"\x12min_required_mixed\x18\x02 \x01(\rR\x10minRequiredMixed\x12*\n" +
	"\x11min_required_same\x18\x03 \x01(\rR\x0fminRequiredSame\x12+\n" +
	"\x12file_size_limit_mb\x18\x04 \x01(\rR\x0ffileSizeLimitMb\"\xcd\x01\n" +
	"\x18UpdateAdminConfigRequest\x12*\n" +
	"\x11session_image_cap\x18\x01 \x01(\rR\x0fsessionImageCap\x12,\n" +
	"\x12min_required_mixed\x18\x02 \x01(\rR\x10minRequiredMixed\x12*\n" +
	"\x11min_required_same\x18\x03 \x01(\rR\x0fminRequiredSame\x12+\n" +
	"\x12file_size_limit_mb\x18\x04 \x01(\rR\x0ffileSizeLimitMb2\xd9\x01\n" +
	"\x15DataCollectionService\x12\\\n" +
	"\rCreateSession\x12$.opensock.dc.v1.CreateSessionRequest\x1a%.opensock.dc.v1.CreateSessionResponse\x12b\n" +
	"\x0fFinalizeSession\x12&.opensock.dc.v1.FinalizeSessionRequest\x1a'.opensock.dc.v1.FinalizeSessionResponse2\xcf\x03\n" +
	"\fAdminService\x12Y\n" +
	"\fListSessions\x12#.opensock.dc.v1.ListSessionsRequest\x1a$.opensock.dc.v1.ListSessionsResponse\x12U\n" +
	"\rDeleteSession\x12$.opensock.dc.v1.DeleteSessionRequest\x1a\x1e.opensock.dc.v1.DeleteResponse\x12O\n" +
	"\n" +
	"DeleteUser\x12!.opensock.dc.v1.DeleteUserRequest\x1a\x1e.opensock.dc.v1.DeleteResponse\x12Z\n" +
	"\tGetConfig\x12%.opensock.dc.v1.GetAdminConfigRequest\x1a&.opensock.dc.v1.GetAdminConfigResponse\x12`\n" +
	"\fUpdateConfig\x12(.opensock.dc.v1.UpdateAdminConfigRequest\x1a&.opensock.dc.v1.GetAdminConfigResponse2\x9d\x02\n" +
	"\rUploadService\x12S\n" +
	"\n" +
	"InitUpload\x12!.opensock.dc.v1.InitUploadRequest\x1a\".opensock.dc.v1.InitUploadResponse\x12V\n" +
	"\vUploadChunk\x12\".opensock.dc.v1.UploadChunkRequest\x1a#.opensock.dc.v1.UploadChunkResponse\x12_\n" +
	"\x0eCompleteUpload\x12%.opensock.dc.v1.CompleteUploadRequest\x1a&.opensock.dc.v1.CompleteUploadResponse2[\n" +
	"\rConfigService\x12J\n" +
	"\x03Get\x12 .opensock.dc.v1.GetConfigRequest\x1a!.opensock.dc.v1.GetConfigResponseB7Z5opensock/datacollection/proto/gen/opensock/dc/v1;dcv1b\x06proto3"

var (
	file_opensock_dc_v1_dc_proto_rawDescOnce sync.Once
	file_opensock_dc_v1_dc_proto_rawDescData []byte
)

func file_opensock_dc_v1_dc_proto_rawDescGZIP() []byte {
	file_opensock_dc_v1_dc_proto_rawDescOnce.Do(func() {
		file_opensock_dc_v1_dc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_opensock_dc_v1_dc_proto_rawDesc), len(file_opensock_dc_v1_dc_proto_rawDesc)))
	})
	return file_opensock_dc_v1_dc_proto_rawDescData
}

var file_opensock_dc_v1_dc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_opensock_dc_v1_dc_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_opensock_dc_v1_dc_proto_goTypes = []any{
	(CreateSessionRequest_Mode)(0),   // 0: opensock.dc.v1.CreateSessionRequest.Mode
	(*CreateSessionRequest)(nil),     // 1: opensock.dc.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),    // 2: opensock.dc.v1.CreateSessionResponse
	(*FinalizeSessionRequest)(nil),   // 3: opensock.dc.v1.FinalizeSessionRequest
	(*FinalizeSessionResponse)(nil),  // 4: opensock.dc.v1.FinalizeSessionResponse
	(*ListSessionsRequest)(nil),      // 5: opensock.dc.v1.ListSessionsRequest
	(*SessionSummary)(nil),           // 6: opensock.dc.v1.SessionSummary
	(*ListSessionsResponse)(nil),     // 7: opensock.dc.v1.ListSessionsResponse
	(*DeleteSessionRequest)(nil),     // 8: opensock.dc.v1.DeleteSessionRequest
	(*DeleteUserRequest)(nil),        // 9: opensock.dc.v1.DeleteUserRequest
	(*DeleteResponse)(nil),           // 10: opensock.dc.v1.DeleteResponse
	(*InitUploadRequest)(nil),        // 11: opensock.dc.v1.InitUploadRequest
	(*InitUploadResponse)(nil),       // 12: opensock.dc.v1.InitUploadResponse
	(*UploadChunkRequest)(nil),       // 13: opensock.dc.v1.UploadChunkRequest
	(*UploadChunkResponse)(nil),      // 14: opensock.dc.v1.UploadChunkResponse
	(*CompleteUploadRequest)(nil),    // 15: opensock.dc.v1.CompleteUploadRequest
	(*CompleteUploadResponse)(nil),   // 16: opensock.dc.v1.CompleteUploadResponse
	(*GetConfigRequest)(nil),         // 17: opensock.dc.v1.GetConfigRequest
	(*GetConfigResponse)(nil),        // 18: opensock.dc.v1.GetConfigResponse
	(*GetAdminConfigRequest)(nil),    // 19: opensock.dc.v1.GetAdminConfigRequest
	(*GetAdminConfigResponse)(nil),   // 20: opensock.dc.v1.GetAdminConfigResponse
	(*UpdateAdminConfigRequest)(nil), // 21: opensock.dc.v1.UpdateAdminConfigRequest
	nil,                              // 22: opensock.dc.v1.GetConfigResponse.MinRequiredEntry
}
var file_opensock_dc_v1_dc_proto_depIdxs = []int32{
	0,  // 0: opensock.dc.v1.CreateSessionRequest.mode:type_name -> opensock.dc.v1.CreateSessionRequest.Mode
	6,  // 1: opensock.dc.v1.ListSessionsResponse.sessions:type_name -> opensock.dc.v1.SessionSummary
	22, // 2: opensock.dc.v1.GetConfigResponse.min_required:type_name -> opensock.dc.v1.GetConfigResponse.MinRequiredEntry
	1,  // 3: opensock.dc.v1.DataCollectionService.CreateSession:input_type -> opensock.dc.v1.CreateSessionRequest
	3,  // 4: opensock.dc.v1.DataCollectionService.FinalizeSession:input_type -> opensock.dc.v1.FinalizeSessionRequest
	5,  // 5: opensock.dc.v1.AdminService.ListSessions:input_type -> opensock.dc.v1.ListSessionsRequest
	8,  // 6: opensock.dc.v1.AdminService.DeleteSession:input_type -> opensock.dc.v1.DeleteSessionRequest
	9,  // 7: opensock.dc.v1.AdminService.DeleteUser:input_type -> opensock.dc.v1.DeleteUserRequest
	19, // 8: opensock.dc.v1.AdminService.GetConfig:input_type -> opensock.dc.v1.GetAdminConfigRequest
	21, // 9: opensock.dc.v1.AdminService.UpdateConfig:input_type -> opensock.dc.v1.UpdateAdminConfigRequest
	11, // 10: opensock.dc.v1.UploadService.InitUpload:input_type -> opensock.dc.v1.InitUploadRequest
	13, // 11: opensock.dc.v1.UploadService.UploadChunk:input_type -> opensock.dc.v1.UploadChunkRequest
	15, // 12: opensock.dc.v1.UploadService.CompleteUpload:input_type -> opensock.dc.v1.CompleteUploadRequest
	17, // 13: opensock.dc.v1.ConfigService.Get:input_type -> opensock.dc.v1.GetConfigRequest
	2,  // 14: opensock.dc.v1.DataCollectionService.CreateSession:output_type -> opensock.dc.v1.CreateSessionResponse
	4,  // 15: opensock.dc.v1.DataCollectionService.FinalizeSession:output_type -> opensock.dc.v1.FinalizeSessionResponse
	7,  // 16: opensock.dc.v1.AdminService.ListSessions:output_type -> opensock.dc.v1.ListSessionsResponse
	10, // 17: opensock.dc.v1.AdminService.DeleteSession:output_type -> opensock.dc.v1.DeleteResponse
	10, // 18: opensock.dc.v1.AdminService.DeleteUser:output_type -> opensock.dc.v1.DeleteResponse
	20, // 19: opensock.dc.v1.AdminService.GetConfig:output_type -> opensock.dc.v1.GetAdminConfigResponse
	20, // 20: opensock.dc.v1.AdminService.UpdateConfig:output_type -> opensock.dc.v1.GetAdminConfigResponse
	12, // 21: opensock.dc.v1.UploadService.InitUpload:output_type -> opensock.dc.v1.InitUploadResponse
	14, // 22: opensock.dc.v1.UploadService.UploadChunk:output_type -> opensock.dc.v1.UploadChunkResponse
	16, // 23: opensock.dc.v1.UploadService.CompleteUpload:output_type -> opensock.dc.v1.CompleteUploadResponse
	18, // 24: opensock.dc.v1.ConfigService.Get:output_type -> opensock.dc.v1.GetConfigResponse
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_opensock_dc_v1_dc_proto_init() }
func file_opensock_dc_v1_dc_proto_init() {
	if File_opensock_dc_v1_dc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_opensock_dc_v1_dc_proto_rawDesc), len(file_opensock_dc_v1_dc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_opensock_dc_v1_dc_proto_goTypes,
		DependencyIndexes: file_opensock_dc_v1_dc_proto_depIdxs,
		EnumInfos:         file_opensock_dc_v1_dc_proto_enumTypes,
		MessageInfos:      file_opensock_dc_v1_dc_proto_msgTypes,
	}.Build()
	File_opensock_dc_v1_dc_proto = out.File
	file_opensock_dc_v1_dc_proto_goTypes = nil
	file_opensock_dc_v1_dc_proto_depIdxs = nil
}
